<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kkl.kklplus.provider.rpt.mapper.ServicePointChargeRptMapper">

    <select id="getServicePointPaySummaryRptData"
            resultType="com.kkl.kklplus.entity.rpt.RPTServicePointPaySummaryEntity">
        SELECT
        service_point_id AS "servicePointId",
        sum(complete_qty) AS "completeQty",
        sum(last_month_balance) AS "lastMonthBalance",
        sum(pre_deposit) AS "preDeposit",
        sum(completed_charge) AS "completedCharge",
        sum(timeliness_charge) AS "timelinessCharge",
        sum(customer_timeliness_charge) AS "customerTimelinessCharge",
        sum(urgent_charge) AS "urgentCharge",
        sum(praise_fee) AS "praiseFee",
        sum(tax_fee) AS "taxFee",
        sum(info_fee) AS "infoFee",
        sum(engineer_deposit) AS "engineerDeposit",
        sum(insurance_charge) AS "insuranceCharge",
        sum(return_charge) AS "returnCharge",
        sum(payable_amount) AS "payableAmount",
        sum(paid_amount) AS "paidAmount",
        sum(platform_fee) AS "platformFee",
        sum(the_balance) AS "theBalance",
        sum(engineer_travel_charge) AS "engineerTravelCharge",
        sum(engineer_other_charge) AS "engineerOtherCharge"
        FROM rpt_servicepoint_charge
        <where>
            <if test="servicePointId != null and servicePointId != 0">
                and service_point_id = #{servicePointId}
            </if>
            and system_id = #{systemId}
            and yearmonth = #{yearMonth}
            <if test="productCategoryIds.size() != 0">
                <choose>
                    <when test="productCategoryIds.size() == 1">
                        and product_category_id = #{productCategoryIds[0]}
                    </when>
                    <otherwise>
                        and product_category_id in
                        <foreach item="productCategoryIds" index="index" collection="productCategoryIds" open="("
                                 separator="," close=")">
                            #{productCategoryIds}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="paymentType != null ">
                and payment_type = #{paymentType}
            </if>
            <if test="quarter != null">
                and quarter = #{quarter}
            </if>
        </where>
        GROUP BY servicePointId
    </select>

    <select id="hasServicePointCostPerReportData" resultType="java.lang.Integer">
        SELECT
        count(0)
        FROM rpt_servicepoint_charge
        <where>
            <if test="servicePointId != null and servicePointId != 0">
                and service_point_id = #{servicePointId}
            </if>
            and system_id = #{systemId}
            and yearmonth = #{yearMonth}
            <if test="appFlag != null and appFlag != 0">
                and app_flag = #{appFlag}
            </if>
            <if test="paymentType != null ">
                and payment_type = #{paymentType}
            </if>
            <if test="productCategoryIds.size() != 0">
                <choose>
                    <when test="productCategoryIds.size() == 1">
                        and product_category_id = #{productCategoryIds[0]}
                    </when>
                    <otherwise>
                        and product_category_id in
                        <foreach item="productCategoryIds" index="index" collection="productCategoryIds" open="("
                                 separator="," close=")">
                            #{productCategoryIds}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="areaType == 2">
                and province_id=#{areaId}
            </if>
            <if test="areaType == 3">
                and city_id=#{areaId}
            </if>
            <if test="areaType == 4">
                and county_id=#{areaId}
            </if>
            <if test="completeQty != null">
                and complete_qty >= #{completeQty}
            </if>
            <if test="quarter != null">
                and quarter = #{quarter}
            </if>
        </where>
    </select>

    <select id="getServicePointCostPerRptData" resultType="com.kkl.kklplus.entity.rpt.RPTServicePointPaySummaryEntity">
        <if test="completeQty != null and completeQty != 0">
            SELECT
            servicePointId,completeQty,lastMonthBalance,completedCharge,timelinessCharge,customerTimelinessCharge,urgentCharge,
            praiseFee,taxFee,infoFee,engineerDeposit,insuranceCharge,returnCharge,payableAmount,paidAmount,theBalance,engineerTravelCharge,
            engineerOtherCharge,costPerOrder from (
        </if>
        SELECT
        service_point_id AS "servicePointId",
        sum(complete_qty) AS "completeQty",
        sum(last_month_balance) AS "lastMonthBalance",
        sum(completed_charge) AS "completedCharge",
        sum(timeliness_charge) AS "timelinessCharge",
        sum(customer_timeliness_charge) AS "customerTimelinessCharge",
        sum(urgent_charge) AS "urgentCharge",
        sum(praise_fee) AS "praiseFee",
        sum(tax_fee) AS "taxFee",
        sum(info_fee) AS "infoFee",
        sum(engineer_deposit) AS "engineerDeposit",
        sum(insurance_charge) AS "insuranceCharge",
        sum(return_charge) AS "returnCharge",
        sum(payable_amount) AS "payableAmount",
        sum(paid_amount) AS "paidAmount",
        sum(the_balance) AS "theBalance",
        sum(engineer_travel_charge) AS "engineerTravelCharge",
        sum(engineer_other_charge) AS "engineerOtherCharge",
        sum(cost_per_order) AS "costPerOrder"
        FROM rpt_servicepoint_charge
        <where>
            <if test="servicePointId != null and servicePointId != 0">
                and service_point_id = #{servicePointId}
            </if>
            and system_id = #{systemId}
            and yearmonth = #{yearMonth}
            <if test="appFlag != null and appFlag != 0">
                and app_flag = #{appFlag}
            </if>
            <if test="paymentType != null ">
                and payment_type = #{paymentType}
            </if>
            <if test="productCategoryIds.size() != 0">
                <choose>
                    <when test="productCategoryIds.size() == 1">
                        and product_category_id = #{productCategoryIds[0]}
                    </when>
                    <otherwise>
                        and product_category_id in
                        <foreach item="productCategoryIds" index="index" collection="productCategoryIds" open="("
                                 separator="," close=")">
                            #{productCategoryIds}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="areaType == 2">
                and province_id=#{areaId}
            </if>
            <if test="areaType == 3">
                and city_id=#{areaId}
            </if>
            <if test="areaType == 4">
                and county_id=#{areaId}
            </if>
            <if test="quarter != null">
                and quarter = #{quarter}
            </if>
        </where>
        GROUP BY servicePointId
        <if test="completeQty != null and completeQty != 0">
            ) a where a.completeQty >= #{completeQty}
        </if>
        ORDER BY costPerOrder desc
    </select>

    <select id="getServicePointCostPerRptList" resultType="com.kkl.kklplus.entity.rpt.RPTServicePointPaySummaryEntity">
        <if test="completeQty != null and completeQty != 0">
            SELECT
            servicePointId,completeQty,lastMonthBalance,completedCharge,timelinessCharge,customerTimelinessCharge,urgentCharge,
            praiseFee,taxFee,infoFee,engineerDeposit,insuranceCharge,returnCharge,payableAmount,paidAmount,theBalance,engineerTravelCharge,
            engineerOtherCharge,costPerOrder from (
        </if>
        SELECT
        service_point_id AS "servicePointId",
        sum(complete_qty) AS "completeQty",
        sum(last_month_balance) AS "lastMonthBalance",
        sum(completed_charge) AS "completedCharge",
        sum(timeliness_charge) AS "timelinessCharge",
        sum(customer_timeliness_charge) AS "customerTimelinessCharge",
        sum(urgent_charge) AS "urgentCharge",
        sum(praise_fee) AS "praiseFee",
        sum(tax_fee) AS "taxFee",
        sum(info_fee) AS "infoFee",
        sum(engineer_deposit) AS "engineerDeposit",
        sum(insurance_charge) AS "insuranceCharge",
        sum(return_charge) AS "returnCharge",
        sum(payable_amount) AS "payableAmount",
        sum(paid_amount) AS "paidAmount",
        sum(the_balance) AS "theBalance",
        sum(engineer_travel_charge) AS "engineerTravelCharge",
        sum(engineer_other_charge) AS "engineerOtherCharge",
        sum(cost_per_order) AS "costPerOrder"
        FROM rpt_servicepoint_charge
        <where>
            <if test="servicePointId != null and servicePointId != 0">
                and service_point_id = #{servicePointId}
            </if>
            and system_id = #{systemId}
            and yearmonth = #{yearMonth}
            <if test="appFlag != null and appFlag != 0">
                and app_flag = #{appFlag}
            </if>
            <if test="paymentType != null ">
                and payment_type = #{paymentType}
            </if>
            <if test="productCategoryIds.size() != 0">
                <choose>
                    <when test="productCategoryIds.size() == 1">
                        and product_category_id = #{productCategoryIds[0]}
                    </when>
                    <otherwise>
                        and product_category_id in
                        <foreach item="productCategoryIds" index="index" collection="productCategoryIds" open="("
                                 separator="," close=")">
                            #{productCategoryIds}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="areaType == 2">
                and province_id=#{areaId}
            </if>
            <if test="areaType == 3">
                and city_id=#{areaId}
            </if>
            <if test="areaType == 4">
                and county_id=#{areaId}
            </if>
            <if test="quarter != null">
                and quarter = #{quarter}
            </if>
        </where>
        GROUP BY servicePointId
        <if test="completeQty != null and completeQty != 0">
            ) a where a.completeQty >= #{completeQty}
        </if>
        ORDER BY costPerOrder desc
    </select>


<!--    <select id="getServicePointServiceAreas" resultType="com.kkl.kklplus.entity.rpt.RPTServicePointPaySummaryEntity">-->
<!--        SELECT msa.servicepoint_id AS "servicePointId",-->
<!--        msa.area_id AS id-->
<!--        FROM md_servicepoint_area_1 msa-->
<!--        <where>-->
<!--        <if test="servicePointIds != null and servicePointIds.size > 0">-->
<!--             msa.servicepoint_id in-->
<!--            <foreach collection="servicePointIds" item="id" open="(" separator="," close=")">-->
<!--                #{id}-->
<!--            </foreach>-->
<!--        </if>-->
<!--        </where>-->
<!--        LIMIT 200000-->
<!--    </select>-->

<!--    <select id="getServicePointServiceAreasNew" resultType="com.kkl.kklplus.entity.rpt.RPTServicePointPaySummaryEntity">-->
<!--        SELECT msa.servicepoint_id AS "servicePointId",-->
<!--        msa.area_id AS id-->
<!--        FROM md_servicepoint_area_1 msa-->
<!--        <where>-->
<!--        <if test="servicePointId != null and servicePointId > 0">-->
<!--            msa.servicepoint_id = #{servicePointId}-->
<!--        </if>-->
<!--        </where>-->
<!--        LIMIT 200000-->
<!--    </select>-->


    <select id="hasServicePointPaySummaryReportData" resultType="java.lang.Integer">
        SELECT
        count(0)
        FROM rpt_servicepoint_charge
        <where>
            <if test="servicePointId != null and servicePointId != 0">
                and service_point_id = #{servicePointId}
            </if>
            and system_id = #{systemId}
            and yearmonth = #{yearMonth}
            <if test="productCategoryIds.size() != 0">
                <choose>
                    <when test="productCategoryIds.size() == 1">
                        and product_category_id = #{productCategoryIds[0]}
                    </when>
                    <otherwise>
                        and product_category_id in
                        <foreach item="productCategoryIds" index="index" collection="productCategoryIds" open="("
                                 separator="," close=")">
                            #{productCategoryIds}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
            <if test="paymentType != null ">
                and payment_type = #{paymentType}
            </if>
            <if test="quarter != null">
                and quarter = #{quarter}
            </if>
        </where>
    </select>


    <select id="getPayableChargeA" resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        fec.service_point_id AS "servicePointId",
        fecc.product_category_id AS "productCategoryId",
        sum(
        fec.service_charge + fec.express_charge + fec.travel_charge + fec.material_charge + fec.other_charge
        ) AS payableA
        FROM
        fi_engineercharge fec
        INNER JOIN fi_engineercharge_condition fecc ON fecc.id = fec.id
        where fec.create_date >= #{startDate}
        AND <![CDATA[ fec.create_date < #{endDate} ]]>
        and fec.quarter = #{quarter}
        GROUP BY
        servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>

    <select id="getPayableChargeB" resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        fecm.service_point_id AS "servicePointId",
        femc.product_category_id AS "productCategoryId",
        sum(
        fecm.customer_time_liness_charge + fecm.insurance_charge + fecm.time_liness_charge + fecm.urgent_charge + fecm.praise_fee + fecm.tax_fee + fecm.info_fee + fecm.deposit) as payableB
        FROM
        fi_engineercharge_master fecm
        INNER JOIN fi_engineercharge_master_condition femc ON femc.id = fecm.id
        where fecm.create_date >= #{startDate}
        AND <![CDATA[ fecm.create_date < #{endDate} ]]>
        and fecm.quarter = #{quarter}
        GROUP BY
        servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>
    <!-- 网点的当月已付合计 -->
    <select id="getServicePointTotalPaid" resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT paid.servicepoint_id AS "servicePointId",
        paid.product_category_id AS "productCategoryId",
        sum(paid.m${selectedMonth}) AS paidAmount
        FROM fi_servicepoint_invoice_monthly_detail paid
        WHERE 	paid.year = #{selectedYear}
        GROUP BY servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>

    <!-- 网点的当月余额合计 -->
    <select id="getServicePointTotalCurrBalance"
            resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT  balance.servicepoint_id AS "servicePointId",
        balance.product_category_id AS "productCategoryId",
        sum(balance.m${selectedMonth}) AS theBalance
        FROM 	rpt_servicepoint_balance_monthly_detail balance
        WHERE 	balance.year = #{selectedYear}
        GROUP BY servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>

    <!-- 网点完工单总金额 -->
    <select id="getServicePointCompletedOrderCharge"
            resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT  fec.service_point_id AS "servicePointId",
        fecc.product_category_id AS "productCategoryId",
        sum(fec.service_charge+fec.express_charge+fec.travel_charge+fec.material_charge+fec.other_charge) AS completedCharge
        FROM    fi_engineercharge fec
        INNER JOIN fi_engineercharge_condition fecc ON fecc.id = fec.id
        WHERE   fec.del_flag = 0
        AND fec.charge_order_type = 0
        AND fec.create_date >= #{beginDate}
        AND <![CDATA[ fec.create_date < #{endDate} ]]>
        AND fec.quarter = #{quarter}
        GROUP BY servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>

    <select id="getServicePointTimelinessAndInsurance"
            resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        fem.service_point_id  AS "servicePointId",
        femc.product_category_id AS "productCategoryId",
        sum(fem.time_liness_charge) AS timelinessCharge,
        sum(fem.customer_time_liness_charge) AS customerTimelinessCharge,
        sum(fem.urgent_charge) AS urgentCharge,
        sum(fem.insurance_charge) AS insuranceCharge,
        sum(fem.praise_fee) AS praiseFee,
        sum(fem.tax_fee) AS taxFee,
        sum(fem.info_fee) AS infoFee,
        sum(fem.deposit) AS engineerDeposit
        FROM  fi_engineercharge_master fem
        INNER JOIN fi_engineercharge_master_condition femc ON femc.id = fem.id
        WHERE fem.del_flag = 0
        AND fem.create_date >= #{beginDate}
        AND <![CDATA[ fem.create_date < #{endDate} ]]>
        AND fem.quarter = #{quarter}
        GROUP BY servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>

    <!-- 网点退补总金额 -->
    <select id="getServicePointDiffCharge" resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        fec.service_point_id AS "servicePointId",
        fecc.product_category_id AS "productCategoryId",
        sum(fec.service_charge+fec.express_charge+fec.travel_charge+fec.material_charge+fec.other_charge) AS returnCharge
        FROM    fi_engineercharge fec
        INNER JOIN fi_engineercharge_condition fecc ON fecc.id = fec.id
        WHERE   fec.del_flag = 0
        AND fec.charge_order_type = 1
        AND fec.create_date >= #{beginDate}
        AND <![CDATA[ fec.create_date < #{endDate} ]]>
        AND fec.quarter = #{quarter}
        GROUP BY servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>


    <!-- 网点的指定月余额合计 -->
    <select id="getServicePointTotalBalance"
            resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        balance.servicepoint_id AS "servicePointId",
        balance.product_category_id AS "productCategoryId",
        sum(balance.m${selectedMonth}) AS lastMonthBalance
        FROM 	rpt_servicepoint_balance_monthly_detail balance
        WHERE 	balance.year = #{selectedYear}
        GROUP BY servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>

    <select id="getServicePointOtherChargeAndTravelCharge"
            resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT	sod.servicepoint_id AS "servicePointId",
        soc.product_category_id AS "productCategoryId",
        sum(sod.engineer_other_charge) AS engineerOtherCharge,
        sum(sod.engineer_travel_charge) AS engineerTravelCharge
        FROM
        sd_order_condition soc
        LEFT JOIN sd_orderdetail sod on sod.order_id = soc.order_id
        LEFT JOIN sd_order_status sos ON sos.order_id = soc.order_id
        WHERE
        sos.charge_date >= #{beginDate}
        AND  <![CDATA[ sos.charge_date < #{endDate} ]]>
        AND sod.del_flag = 0
        AND sod.servicepoint_id IS NOT NULL
        GROUP BY servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>

    <select id="getAllServicePointFinishQty"
            resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        sod.servicepoint_id AS "servicePointId",
        soc.product_category_id AS "productCategoryId",
        COUNT(distinct soc.order_id) AS completeQty
        FROM 	sd_order_condition soc
        LEFT JOIN sd_orderdetail sod on sod.order_id = soc.order_id
        LEFT JOIN sd_order_status sos ON sos.order_id = soc.order_id
        WHERE
        sos.charge_date >= #{beginDate}
        AND  <![CDATA[ sos.charge_date < #{endDate} ]]>
        AND sod.del_flag = 0
        AND sod.servicepoint_id IS NOT NULL
        GROUP BY servicePointId,productCategoryId
        LIMIT #{beginLimit},#{endLimit}
    </select>


    <select id="getAllServicePointPlatFees"
            resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        fsw.service_point_id    AS servicePointId,
        SUM(platform_fee)       AS platformFee
        FROM  fi_servicepoint_withdraw fsw
        WHERE fsw.quarter = #{quarter}
        AND fsw.STATUS = 40
        AND fsw.del_flag = 0
        AND fsw.pay_date >= #{beginDate}
        AND  <![CDATA[ fsw.pay_date< #{endDate} ]]>
        GROUP BY servicePointId
        ORDER BY servicePointId
        LIMIT #{beginLimit},#{endLimit}
    </select>

    <select id="getUpServicePointChargeData"
            resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        id,
        service_point_id,
        product_category_id,
        yearmonth,
        system_id
        FROM rpt_servicepoint_charge
        WHERE
        system_id = #{systemId}
        and yearmonth = #{yearMonth}
        and quarter = #{quarter}
        LIMIT 200000
    </select>


    <update id="updateServicePointCharge"
            parameterType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        UPDATE rpt_servicepoint_charge
        SET
        <if test="provinceId != null and provinceId !=0">
            province_id = #{provinceId},
        </if>
        <if test="cityId != null and cityId !=0">
            city_id = #{cityId},
        </if>
        <if test="countyId != null and countyId !=0">
            county_id = #{countyId},
        </if>
        <if test="paymentType != null and paymentType !=0">
            payment_type = #{paymentType},
        </if>
        complete_qty = #{completeQty},
        last_month_balance = #{lastMonthBalance},
        pre_deposit = #{preDeposit},
        completed_charge = #{completedCharge},
        timeliness_charge = #{timelinessCharge},
        customer_timeliness_charge = #{customerTimelinessCharge},
        urgent_charge = #{urgentCharge},
        praise_fee = #{praiseFee},
        tax_fee = #{taxFee},
        info_fee = #{infoFee},
        engineer_deposit = #{engineerDeposit},
        insurance_charge = #{insuranceCharge},
        return_charge = #{returnCharge},
        payable_amount = #{payableAmount},
        paid_amount = #{paidAmount},
        platform_fee = #{platformFee},
        the_balance = #{theBalance},
        engineer_travel_charge = #{engineerTravelCharge},
        engineer_other_charge = #{engineerOtherCharge},
        cost_per_order = #{costPerOrder},
        app_flag = #{appFlag}
        WHERE
        id = #{id}
    </update>

    <update id="updateServicePointChargeInfoFee">
        UPDATE rpt_servicepoint_charge
        SET
        <if test="provinceId != null and provinceId !=0">
            province_id = #{provinceId},
        </if>
        <if test="cityId != null and cityId !=0">
            city_id = #{cityId},
        </if>
        <if test="countyId != null and countyId !=0">
            county_id = #{countyId},
        </if>
        <if test="paymentType != null and paymentType !=0">
            payment_type = #{paymentType},
        </if>
        complete_qty = #{completeQty},
        last_month_balance = #{lastMonthBalance},
        pre_deposit = #{preDeposit},
        completed_charge = #{completedCharge},
        timeliness_charge = #{timelinessCharge},
        customer_timeliness_charge = #{customerTimelinessCharge},
        urgent_charge = #{urgentCharge},
        praise_fee = #{praiseFee},
        tax_fee = #{taxFee},
        info_fee = #{infoFee},
        engineer_deposit = #{engineerDeposit},
        insurance_charge = #{insuranceCharge},
        return_charge = #{returnCharge},
        payable_amount = #{payableAmount},
        paid_amount = #{paidAmount},
        the_balance = #{theBalance},
        engineer_travel_charge = #{engineerTravelCharge},
        engineer_other_charge = #{engineerOtherCharge},
        cost_per_order = #{costPerOrder},
        app_flag = #{appFlag}
        WHERE
        id = #{id}
    </update>


    <insert id="insertServicePointCharge"
            parameterType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        INSERT INTO rpt_servicepoint_charge(
        system_id,
        yearmonth,
        service_point_id,
        product_category_id,
        province_id,
        city_id,
        county_id,
        payment_type,
        complete_qty,
        last_month_balance,
        pre_deposit,
        completed_charge,
        timeliness_charge,
        customer_timeliness_charge,
        urgent_charge,
        praise_fee,
        tax_fee,
        info_fee,
        engineer_deposit,
        insurance_charge,
        return_charge,
        payable_amount,
        paid_amount,
        platform_fee,
        the_balance,
        engineer_travel_charge,
        engineer_other_charge,
        cost_per_order,
        app_flag,
        quarter
        )VALUES
        (
        #{systemId},
        #{yearMonth},
        #{servicePointId},
        #{productCategoryId},
        #{provinceId},
        #{cityId},
        #{countyId},
        #{paymentType},
        #{completeQty},
        #{lastMonthBalance},
        #{preDeposit},
        #{completedCharge},
        #{timelinessCharge},
        #{customerTimelinessCharge},
        #{urgentCharge},
        #{praiseFee},
        #{taxFee},
        #{infoFee},
        #{engineerDeposit},
        #{insuranceCharge},
        #{returnCharge},
        #{payableAmount},
        #{paidAmount},
        #{platformFee},
        #{theBalance},
        #{engineerTravelCharge},
        #{engineerOtherCharge},
        #{costPerOrder},
        #{appFlag},
        #{quarter}
        )
    </insert>

    <delete id="deleteServicePointCharge">
        DELETE FROM rpt_servicepoint_charge
        WHERE   system_id = #{systemId}
        AND yearmonth = #{yearMonth}
        AND quarter = #{quarter}
    </delete>

    <select id="getUpdatePlatformFeeData" resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
      SELECT
      id,
      service_point_id,
      paid_amount
      FROM rpt_servicepoint_charge
      where system_id = #{systemId}
      and yearmonth = #{yearMonth}
      and quarter = #{quarter}
      and product_category_id > 0
      limit 200000
    </select>

    <update id="updatePlatformFee">
        UPDATE rpt_servicepoint_charge
        SET
        platform_fee = #{platformFee}
        where
        id = #{id}
    </update>



    <insert id="insertServicePointChargeNew"
            parameterType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        INSERT INTO rpt_servicepoint_charge_new(
        system_id,
        yearmonth,
        service_point_id,
        product_category_id,
        province_id,
        city_id,
        county_id,
        payment_type,
        complete_qty,
        last_month_balance,
        pre_deposit,
        completed_charge,
        timeliness_charge,
        customer_timeliness_charge,
        urgent_charge,
        praise_fee,
        tax_fee,
        info_fee,
        engineer_deposit,
        insurance_charge,
        return_charge,
        payable_amount,
        paid_amount,
        platform_fee,
        the_balance,
        engineer_travel_charge,
        engineer_other_charge,
        cost_per_order,
        app_flag,
        quarter
        )VALUES
        (
        #{systemId},
        #{yearMonth},
        #{servicePointId},
        #{productCategoryId},
        #{provinceId},
        #{cityId},
        #{countyId},
        #{paymentType},
        #{completeQty},
        #{lastMonthBalance},
        #{preDeposit},
        #{completedCharge},
        #{timelinessCharge},
        #{customerTimelinessCharge},
        #{urgentCharge},
        #{praiseFee},
        #{taxFee},
        #{infoFee},
        #{engineerDeposit},
        #{insuranceCharge},
        #{returnCharge},
        #{payableAmount},
        #{paidAmount},
        #{platformFee},
        #{theBalance},
        #{engineerTravelCharge},
        #{engineerOtherCharge},
        #{costPerOrder},
        #{appFlag},
        #{quarter}
        )
    </insert>

    <select id="getUpdateServicePointQuarter"
            resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        system_id AS "systemId",
        yearmonth AS "yearMonth",
        service_point_id AS "servicePointId",
        product_category_id AS "productCategoryId",
        province_id as "provinceId",
        city_id AS "cityId",
        county_id AS "countyId",
        payment_type AS "paymentType",
        complete_qty AS "completeQty",
        last_month_balance AS "lastMonthBalance",
        pre_deposit AS "preDeposit",
        completed_charge AS "completedCharge",
        timeliness_charge AS "timelinessCharge",
        customer_timeliness_charge AS "customerTimelinessCharge",
        urgent_charge AS "urgentCharge",
        praise_fee AS "praiseFee",
        tax_fee AS "taxFee",
        info_fee AS "infoFee",
        engineer_deposit AS "engineerDeposit",
        insurance_charge AS "insuranceCharge",
        return_charge AS "returnCharge",
        payable_amount AS "payableAmount",
        paid_amount AS "paidAmount",
        platform_fee AS "platformFee",
        the_balance AS "theBalance",
        engineer_travel_charge AS "engineerTravelCharge",
        engineer_other_charge AS "engineerOtherCharge",
        cost_per_order AS "costPerOrder",
        app_flag AS "appFlag",
        quarter AS "quarter"
        FROM rpt_servicepoint_charge
        WHERE system_id = #{systemId}
        and yearmonth = #{yearMonth}
        and quarter = #{quarter}
    </select>



    <select id="getUpdatePlatformFeeList" resultType="com.kkl.kklplus.provider.rpt.entity.RPTServicePointChargeEntity">
        SELECT
        id,
        service_point_id,
        product_category_id,
        platform_fee
        FROM rpt_servicepoint_charge
        where system_id = #{systemId}
        and yearmonth = #{yearMonth}
        and quarter = #{quarter}
        order by service_point_id,product_category_id
        limit 200000
    </select>
</mapper>